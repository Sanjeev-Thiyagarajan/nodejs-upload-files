import { __assign, __values } from "tslib";
import { HttpRequest } from "@aws-sdk/protocol-http";
export function headerDefault(headerBag) {
    return function (next) {
        return function (args) {
            var e_1, _a;
            if (HttpRequest.isInstance(args.request)) {
                var headers = __assign({}, args.request.headers);
                try {
                    for (var _b = __values(Object.keys(headerBag)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var name = _c.value;
                        if (!(name in headers)) {
                            headers[name] = headerBag[name];
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                return next(__assign(__assign({}, args), { request: __assign(__assign({}, args.request), { headers: headers }) }));
            }
            else {
                return next(args);
            }
        };
    };
}
